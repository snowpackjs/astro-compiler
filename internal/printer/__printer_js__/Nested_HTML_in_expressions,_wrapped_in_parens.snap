
[TestPrinter/Nested_HTML_in_expressions,_wrapped_in_parens - 1]
## Input

```
/-/-/-/
const image = './penguin.png';
const canonicalURL = new URL('http://example.com');
/-/-/-/
{image && (<meta property="og:image" content={new URL(image, canonicalURL)}>)}
```

## Output

```js
import {
  Fragment,
  render as $$render,
  createAstro as $$createAstro,
  createComponent as $$createComponent,
  renderComponent as $$renderComponent,
  renderHead as $$renderHead,
  maybeRenderHead as $$maybeRenderHead,
  unescapeHTML as $$unescapeHTML,
  renderSlot as $$renderSlot,
  mergeSlots as $$mergeSlots,
  addAttribute as $$addAttribute,
  spreadAttributes as $$spreadAttributes,
  defineStyleVars as $$defineStyleVars,
  defineScriptVars as $$defineScriptVars,
  renderTransition as $$renderTransition,
  createTransitionScope as $$createTransitionScope,
  renderScript as $$renderScript,
  createMetadata as $$createMetadata
} from "http://localhost:3000/";

export const $$metadata = $$createMetadata(import.meta.url, { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: new Set([]), hoisted: [] });

const $$Component = $$createComponent(($$result, $$props, $$slots) => {

const image = './penguin.png';
const canonicalURL = new URL('http://example.com');

return $$render`${image && ($$render`<meta property="og:image"${$$addAttribute(new URL(image, canonicalURL), "content")}>`)}`;
}, undefined, undefined);
export default $$Component;
```
---
