
[TestPrinter/complex_table - 1]
## Input

```
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <title>Astro Multi Table</title>
    </head>
    <body>
        <main>
            <section>
                {Array(3).fill(false).map((item, idx) => <div>
                    <div class="row">
                        {'a'}
                        <table>
                            <thead>
                                <tr>
                                    <>{Array(7).fill(false).map((entry, index) => <th>A</th>)}</>
                                </tr>
                            </thead>
                            <tbody>
                                <tr><td></td></tr>
                            </tbody>
                        </table>
                    </div>
                </div>)}
            </section>
            <section>
                <div class="row">
                    <table>
                        <thead>
                            <tr>
                                <th>B</th>
                                <th>B</th>
                                <th>B</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr><td></td></tr>
                        </tbody>
                    </table>
                </div>
            </section>
        </main>
    </body>
</html>
```

## Output

```js
import {
  Fragment,
  render as $$render,
  createAstro as $$createAstro,
  createComponent as $$createComponent,
  renderComponent as $$renderComponent,
  renderHead as $$renderHead,
  maybeRenderHead as $$maybeRenderHead,
  unescapeHTML as $$unescapeHTML,
  renderSlot as $$renderSlot,
  mergeSlots as $$mergeSlots,
  addAttribute as $$addAttribute,
  spreadAttributes as $$spreadAttributes,
  defineStyleVars as $$defineStyleVars,
  defineScriptVars as $$defineScriptVars,
  renderTransition as $$renderTransition,
  createTransitionScope as $$createTransitionScope,
  renderScript as $$renderScript,
  createMetadata as $$createMetadata
} from "http://localhost:3000/";

export const $$metadata = $$createMetadata(import.meta.url, { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: new Set([]), hoisted: [] });

const $$Astro = $$createAstro('https://astro.build');
const Astro = $$Astro;
const $$Component = $$createComponent(($$result, $$props, $$slots) => {
const Astro = $$result.createAstro($$Astro, $$props, $$slots);
Astro.self = $$Component;

return $$render`<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width">
        <title>Astro Multi Table</title>
    ${$$renderHead($$result)}</head>
    <body>
        <main>
            <section>
                ${Array(3).fill(false).map((item, idx) => $$render`<div>
                    <div class="row">
                        ${'a'}
                        <table>
                            <thead>
                                <tr>
                                    ${$$renderComponent($$result,'Fragment',Fragment,{},{"default": () => $$render`${Array(7).fill(false).map((entry, index) => $$render`<th>A</th>`)}`,})}
                                </tr>
                            </thead>
                            <tbody>
                                <tr><td></td></tr>
                            </tbody>
                        </table>
                    </div>
                </div>`)}
            </section>
            <section>
                <div class="row">
                    <table>
                        <thead>
                            <tr>
                                <th>B</th>
                                <th>B</th>
                                <th>B</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr><td></td></tr>
                        </tbody>
                    </table>
                </div>
            </section>
        </main>
    </body>
</html>`;
}, undefined, undefined);
export default $$Component;
```
---
