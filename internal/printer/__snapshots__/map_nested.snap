
[TestPrinter/map_nested - 1]
## Input

```
/-/-/-/
const groups = [[0, 1, 2], [3, 4, 5]];
/-/-/-/
<div>
    {groups.map(items => {
        return <ul>{
            items.map(item => {
                return <li>{item}</li>;
            })
        }</ul>
    })}
</div>
```

## Output

```js
import {
  Fragment,
  render as $$render,
  createAstro as $$createAstro,
  createComponent as $$createComponent,
  renderComponent as $$renderComponent,
  renderHead as $$renderHead,
  maybeRenderHead as $$maybeRenderHead,
  unescapeHTML as $$unescapeHTML,
  renderSlot as $$renderSlot,
  mergeSlots as $$mergeSlots,
  addAttribute as $$addAttribute,
  spreadAttributes as $$spreadAttributes,
  defineStyleVars as $$defineStyleVars,
  defineScriptVars as $$defineScriptVars,
  renderTransition as $$renderTransition,
  createTransitionScope as $$createTransitionScope,
  renderScript as $$renderScript,
  createMetadata as $$createMetadata
} from "http://localhost:3000/";

export const $$metadata = $$createMetadata(import.meta.url, { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: new Set([]), hoisted: [] });

const $$Component = $$createComponent(($$result, $$props, $$slots) => {

const groups = [[0, 1, 2], [3, 4, 5]];

return $$render`${$$maybeRenderHead($$result)}<div>
    ${groups.map(items => {
        return $$render`<ul>${
            items.map(item => {
                return $$render`<li>${item}</li>`;
            })
        }</ul>`
    })}
</div>`;
}, undefined, undefined);
export default $$Component;
```
---
