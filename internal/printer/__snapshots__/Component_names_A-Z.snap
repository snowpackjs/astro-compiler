
[TestPrinter/Component_names_A-Z - 1]
## Input

```
/-/-/-/
import AComponent from '../components/AComponent.jsx';
import ZComponent from '../components/ZComponent.jsx';
/-/-/-/

<body>
  <AComponent />
  <ZComponent />
</body>
```

## Output

```js
import {
  Fragment,
  render as $$render,
  createAstro as $$createAstro,
  createComponent as $$createComponent,
  renderComponent as $$renderComponent,
  renderHead as $$renderHead,
  maybeRenderHead as $$maybeRenderHead,
  unescapeHTML as $$unescapeHTML,
  renderSlot as $$renderSlot,
  mergeSlots as $$mergeSlots,
  addAttribute as $$addAttribute,
  spreadAttributes as $$spreadAttributes,
  defineStyleVars as $$defineStyleVars,
  defineScriptVars as $$defineScriptVars,
  renderTransition as $$renderTransition,
  createTransitionScope as $$createTransitionScope,
  renderScript as $$renderScript,
  createMetadata as $$createMetadata
} from "http://localhost:3000/";
import AComponent from '../components/AComponent.jsx';
import ZComponent from '../components/ZComponent.jsx';

import * as $$module1 from '../components/AComponent.jsx';
import * as $$module2 from '../components/ZComponent.jsx';

export const $$metadata = $$createMetadata(import.meta.url, { modules: [{ module: $$module1, specifier: '../components/AComponent.jsx', assert: {} }, { module: $$module2, specifier: '../components/ZComponent.jsx', assert: {} }], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: new Set([]), hoisted: [] });

const $$Component = $$createComponent(($$result, $$props, $$slots) => {

return $$render`${$$maybeRenderHead($$result)}<body>
  ${$$renderComponent($$result,'AComponent',AComponent,{})}
  ${$$renderComponent($$result,'ZComponent',ZComponent,{})}
</body>`;
}, undefined, undefined);
export default $$Component;
```
---
