
[TestPrinter/gets_all_potential_hydrated_components - 1]
## Input

```
/-/-/-/
import One from 'one';
import Two from 'two';
import 'custom-element';
const name = 'world';
/-/-/-/
<One client:load />
<Two client:load />
<my-element client:load />
```

## Output

```js
import {
  Fragment,
  render as $$render,
  createAstro as $$createAstro,
  createComponent as $$createComponent,
  renderComponent as $$renderComponent,
  renderHead as $$renderHead,
  maybeRenderHead as $$maybeRenderHead,
  unescapeHTML as $$unescapeHTML,
  renderSlot as $$renderSlot,
  mergeSlots as $$mergeSlots,
  addAttribute as $$addAttribute,
  spreadAttributes as $$spreadAttributes,
  defineStyleVars as $$defineStyleVars,
  defineScriptVars as $$defineScriptVars,
  renderTransition as $$renderTransition,
  createTransitionScope as $$createTransitionScope,
  renderScript as $$renderScript,
  createMetadata as $$createMetadata
} from "http://localhost:3000/";
import One from 'one';
import Two from 'two';
import 'custom-element';

import * as $$module1 from 'one';
import * as $$module2 from 'two';
import * as $$module3 from 'custom-element';

export const $$metadata = $$createMetadata(import.meta.url, { modules: [{ module: $$module1, specifier: 'one', assert: {} }, { module: $$module2, specifier: 'two', assert: {} }, { module: $$module3, specifier: 'custom-element', assert: {} }], hydratedComponents: ['my-element', Two, One], clientOnlyComponents: [], hydrationDirectives: new Set(['load']), hoisted: [] });

const $$Component = $$createComponent(($$result, $$props, $$slots) => {

const name = 'world';

return $$render`${$$renderComponent($$result,'One',One,{"client:load":true,"client:component-hydration":"load","client:component-path":("one"),"client:component-export":("default")})}
${$$renderComponent($$result,'Two',Two,{"client:load":true,"client:component-hydration":"load","client:component-path":("two"),"client:component-export":("default")})}
${$$renderComponent($$result,'my-element','my-element',{"client:load":true,"client:component-hydration":"load"})}`;
}, undefined, undefined);
export default $$Component;
```
---
