
[TestPrinter/function_expression_slots_II_(#959) - 1]
## Input

```
<Layout title="Welcome to Astro.">
    <main>
        <Layout title="switch bug">
            {components.map((component, i) => {
                switch(component) {
                    case "Hero":
                        return <div>Hero</div>
                    case "Component2":
                        return <div>Component2</div>
                }
            })}
        </Layout>
    </main>
</Layout>
```

## Output

```js
import {
  Fragment,
  render as $$render,
  createAstro as $$createAstro,
  createComponent as $$createComponent,
  renderComponent as $$renderComponent,
  renderHead as $$renderHead,
  maybeRenderHead as $$maybeRenderHead,
  unescapeHTML as $$unescapeHTML,
  renderSlot as $$renderSlot,
  mergeSlots as $$mergeSlots,
  addAttribute as $$addAttribute,
  spreadAttributes as $$spreadAttributes,
  defineStyleVars as $$defineStyleVars,
  defineScriptVars as $$defineScriptVars,
  renderTransition as $$renderTransition,
  createTransitionScope as $$createTransitionScope,
  renderScript as $$renderScript,
  createMetadata as $$createMetadata
} from "http://localhost:3000/";

export const $$metadata = $$createMetadata(import.meta.url, { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: new Set([]), hoisted: [] });

const $$Astro = $$createAstro('https://astro.build');
const Astro = $$Astro;
const $$Component = $$createComponent(($$result, $$props, $$slots) => {
const Astro = $$result.createAstro($$Astro, $$props, $$slots);
Astro.self = $$Component;

return $$render`${$$renderComponent($$result,'Layout',Layout,{"title":"Welcome to Astro."},{"default": () => $$render`
    ${$$maybeRenderHead($$result)}<main>
        ${$$renderComponent($$result,'Layout',Layout,{"title":"switch bug"},{"default": () => $$render`${components.map((component, i) => {
                switch(component) {
                    case "Hero":
                        return $$render`<div>Hero</div>`
                    case "Component2":
                        return $$render`<div>Component2</div>`
                }
            })}`,})}
    </main>
`,})}`;
}, undefined, undefined);
export default $$Component;
```
---
